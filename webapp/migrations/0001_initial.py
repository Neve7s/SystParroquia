# Generated by Django 5.1.1 on 2024-09-11 05:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bautizo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parroquia', models.CharField(default="'La Purisima' - Concepción", max_length=255)),
                ('libro', models.PositiveIntegerField()),
                ('fojas', models.PositiveIntegerField()),
                ('numero', models.PositiveIntegerField()),
                ('apellidos', models.CharField(max_length=50)),
                ('nombres', models.CharField(max_length=30)),
                ('lugar_nacimiento', models.CharField(max_length=50, null=True)),
                ('fecha_nacimiento', models.DateField()),
                ('fecha_bautizo', models.DateField()),
                ('padre', models.CharField(max_length=80)),
                ('nacimientolugarpadre', models.CharField(max_length=50, null=True)),
                ('madre', models.CharField(max_length=80)),
                ('nacimientolugarmadre', models.CharField(max_length=50, null=True)),
                ('nombrepadrino', models.CharField(max_length=80)),
                ('nombremadrina', models.CharField(max_length=80)),
                ('oficiante', models.CharField(max_length=255)),
                ('anotaciones', models.TextField(default='Ninguno')),
            ],
        ),
        migrations.CreateModel(
            name='Confirmacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=30)),
                ('apellidos', models.CharField(max_length=50)),
                ('ex_monsenor', models.CharField(max_length=80)),
                ('parroquia', models.CharField(default="'La Purisima' - Concepción", max_length=255)),
                ('fecha', models.DateField()),
                ('padres', models.TextField()),
                ('padrinos', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Matrimonio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parroquia', models.CharField(default="'La Purisima' - Concepción", max_length=255)),
                ('libro', models.PositiveIntegerField()),
                ('fojas', models.PositiveIntegerField()),
                ('numero', models.PositiveIntegerField()),
                ('esposo', models.CharField(max_length=80)),
                ('lugar_bautizo_esposo', models.CharField(max_length=80)),
                ('esposa', models.CharField(max_length=80)),
                ('lugar_bautizo_esposa', models.CharField(max_length=80)),
                ('padre_esposo', models.CharField(max_length=80)),
                ('madre_esposo', models.CharField(max_length=80)),
                ('padre_esposa', models.CharField(max_length=80)),
                ('madre_esposa', models.CharField(max_length=80)),
                ('padrinos', models.TextField()),
                ('fecha_matrimonio', models.DateField()),
                ('anotaciones', models.TextField(default='Ninguno')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fecha_de_nacimiento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
